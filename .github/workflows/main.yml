name: CI/CD Pipeline

# Trigger the workflow on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Optional: Trigger on changes to specific files
  # You can trigger the workflow if changes happen to certain files
  # paths:
  #   - 'Dockerfile'
  #   - 'docker-compose.yml'
  #   - 'kubernetes/**'
  #   - 'terraform/**'

jobs:
  terraform:
    name: Set Up Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/

  build_and_push:
    name: Build and Push Docker Images
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        run: echo "${{ secrets.AZURE_ACR_PASSWORD }}" | docker login hari-acr.azurecr.io -u hari-acr --password-stdin

      - name: Build and Push Docker Images
        run: |
          docker build -t hari-acr.azurecr.io/book-catalog:latest ./book_catalog
          docker build -t hari-acr.azurecr.io/inventory-management:latest ./inventory_management
          docker push hari-acr.azurecr.io/book-catalog:latest
          docker push hari-acr.azurecr.io/inventory-management:latest

  deploy:
    name: Deploy Microservices to AKS
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: Azure/setup-kubectl@v1

      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/hari-book-catalog-deployment.yaml
          kubectl apply -f kubernetes/hari-book-catalog-service.yaml
          kubectl apply -f kubernetes/hari-inventory-management-deployment.yaml
          kubectl apply -f kubernetes/hari-inventory-management-service.yaml

