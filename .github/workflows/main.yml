name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch: # Allows manual trigger

jobs:
  terraform:
    name: Set Up Infrastructure (ACR + AKS)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Azure Login with Username and Password
      - name: Log in to Azure using username and password
        run: |
          az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/

  build_and_push:
    name: Build and Push Docker Images
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Login to Azure Container Registry
      - name: Log in to Azure again
        run: |
          az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}
          ACR_NAME=$(terraform output -raw acr_name)
          az acr login --name $ACR_NAME

      - name: Build and Push Docker Images
        run: |
          ACR_NAME=$(terraform output -raw acr_name)
          docker build -t $ACR_NAME.azurecr.io/book-catalog:latest ./book_catalog
          docker build -t $ACR_NAME.azurecr.io/inventory-management:latest ./inventory_management
          docker push $ACR_NAME.azurecr.io/book-catalog:latest
          docker push $ACR_NAME.azurecr.io/inventory-management:latest

  deploy:
    name: Deploy Microservices to AKS
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: Azure/setup-kubectl@v1
        with:
          azure-resource-group: "hari-resource-group"
          cluster-name: "hari-aks-cluster"
          azure-cluster-version: "latest"

      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/hari-book-catalog-deployment.yaml
          kubectl apply -f kubernetes/hari-book-catalog-service.yaml
          kubectl apply -f kubernetes/hari-inventory-management-deployment.yaml
          kubectl apply -f kubernetes/hari-inventory-management-service.yaml
